module.exports = {
    env: {
        browser: true,
        es2021: true,
        node: true,
        jest: true,
    },
    extends: [
        'eslint:recommended',
        'plugin:react/recommended',
        'plugin:react/jsx-runtime',
        'plugin:react-hooks/recommended',
        'plugin:@typescript-eslint/recommended',
        'airbnb',
    ],
    overrides: [],
    settings: {
        react: {
            createClass: 'createReactClass', // Regex for Component Factory to use,
            // default to "createReactClass"
            pragma: 'React',
            fragment: 'Fragment',
            version: 'detect', // React version. "detect" automatically picks the version you have installed.
            flowVersion: '0.53', // Flow version
        },
    },
    parser: '@typescript-eslint/parser',
    parserOptions: {
        ecmaVersion: 'latest',
        sourceType: 'module',
        ecmaFeatures: { jsx: true },
    },
    plugins: ['react', '@typescript-eslint'],
    rules: {
        indent: ['error', 4],
        quotes: ['error', 'single'],
        'no-mixed-spaces-and-tabs': ['error', 'smart-tabs'],
        'linebreak-style': 'off',
        semi: ['error', 'always'],
        'import/no-unresolved': 'off',
        'import/prefer-default-export': 'off',
        'react/react-in-jsx-scope': 'off',
        'react/jsx-filename-extension': [1, { extensions: ['.js', '.jsx', '.ts', '.tsx'] }],
        'import/extensions': ['warn', { ts: 'never' }],
        'react/jsx-indent': ['warn', 4],
        'react/jsx-indent-props': ['warn', 4],
        'react-hooks/rules-of-hooks': 'error',
        'react-hooks/exhaustive-deps': 'warn',
        'react/jsx-uses-react': 'error',
        'react/jsx-uses-vars': 'error',
        'react/function-component-definition': ['error', { namedComponents: 'arrow-function' }],
        'react/boolean-prop-naming': ['error', { rule: '^(is|has)[A-Z]([A-Za-z0-9]?)+' }],
        '@typescript-eslint/no-unused-vars': 'warn',
        'no-unused-vars': 'off',
        'jsx-quotes': ['error', 'prefer-single'],
        'max-len': ['error', { code: 100, ignoreComments: true }],
        'import/no-extraneous-dependencies': 'off',
        'no-shadow': 'off',
        'react/require-default-props': 'off',
        'object-curly-newline': ['error', { multiline: true }],
        'react/jsx-props-no-spreading': 'warn',
        'jsx-a11y/label-has-associated-control': 'off',
        'react/jsx-no-useless-fragment': 'off',
    },
};
